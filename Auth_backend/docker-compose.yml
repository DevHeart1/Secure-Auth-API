version: '3.8'

services:
  # Web API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - static_files:/app/Auth_backend/staticfiles
      - media_files:/app/Auth_backend/media
      - logs:/app/Auth_backend/logs
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - app_network

  # Celery worker for async tasks
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A Auth_backend.secure_auth worker -l info
    volumes:
      - logs:/app/Auth_backend/logs
    env_file:
      - .env
    depends_on:
      - api
      - redis
      - postgres
    networks:
      - app_network

  # Celery beat for scheduled tasks
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A Auth_backend.secure_auth beat -l info
    volumes:
      - logs:/app/Auth_backend/logs
    env_file:
      - .env
    depends_on:
      - api
      - redis
      - postgres
    networks:
      - app_network

  # Postgres database service
  postgres:
    image: postgres:14.0-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - app_network

  # Redis service for cache and message broker
  redis:
    image: redis:7.0-alpine
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - app_network

  # Nginx service for serving static files and reverse proxy
  nginx:
    image: nginx:1.23-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/secure_auth.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - static_files:/var/www/static
      - media_files:/var/www/media
    depends_on:
      - api
    networks:
      - app_network

# Networks
networks:
  app_network:
    driver: bridge

# Volumes
volumes:
  postgres_data:
  redis_data:
  static_files:
  media_files:
  logs: