version: '3.8'

services:
  web:
    build: .
    restart: always
    depends_on:
      - db
      - redis
    env_file:
      - ./.env.prod
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - logs:/app/logs
    networks:
      - auth_network

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
    networks:
      - auth_network
    restart: always

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - auth_network
    restart: always

  celery:
    build: .
    command: celery -A secure_auth worker -l info
    depends_on:
      - redis
      - db
    env_file:
      - ./.env.prod
    volumes:
      - logs:/app/logs
    networks:
      - auth_network
    restart: always

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - ./nginx/:/etc/nginx/conf.d/
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - web
    networks:
      - auth_network
    restart: always

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx

networks:
  auth_network:

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
  logs: